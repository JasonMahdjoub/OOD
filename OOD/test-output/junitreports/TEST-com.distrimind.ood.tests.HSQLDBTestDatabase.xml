<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="com.distrimind.ood.tests.HSQLDBTestDatabase" tests="34" time="2.334" ignored="0" failures="2" timestamp="09 juin 2017 13:00:17 GMT" skipped="26" hostname="Quantum" errors="3">
  <testcase name="getRecord" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- getRecord -->
  <testcase name="testCommandTranslatorInterpreter" time="0.042" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <failure type="java.lang.AssertionError" message="Maps do not match for key:11 actual:Fri Jun 09 14:00:13 GMT+01:00 2017 expected:2017-06-09 14:00:13.493 expected [2017-06-09 14:00:13.493] but found [Fri Jun 09 14:00:13 GMT+01:00 2017]">
      <![CDATA[java.lang.AssertionError: Maps do not match for key:11 actual:Fri Jun 09 14:00:13 GMT+01:00 2017 expected:2017-06-09 14:00:13.493 expected [2017-06-09 14:00:13.493] but found [Fri Jun 09 14:00:13 GMT+01:00 2017]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:812)
	at com.distrimind.ood.tests.TestDatabase.testCommandTranslatorInterpreter(TestDatabase.java:3290)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testCommandTranslatorInterpreter -->
  <testcase name="testCommandTranslatorInterpreter" time="0.167" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <failure type="java.lang.AssertionError" message="Maps do not match for key:11 actual:Fri Jun 09 14:00:13 GMT+01:00 2017 expected:2017-06-09 14:00:13.493 expected [2017-06-09 14:00:13.493] but found [Fri Jun 09 14:00:13 GMT+01:00 2017]">
      <![CDATA[java.lang.AssertionError: Maps do not match for key:11 actual:Fri Jun 09 14:00:13 GMT+01:00 2017 expected:2017-06-09 14:00:13.493 expected [2017-06-09 14:00:13.493] but found [Fri Jun 09 14:00:13 GMT+01:00 2017]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:812)
	at com.distrimind.ood.tests.TestDatabase.testCommandTranslatorInterpreter(TestDatabase.java:3290)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- testCommandTranslatorInterpreter -->
  <testcase name="removeWithCascade" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- removeWithCascade -->
  <testcase name="firstAdd" time="0.048" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <error type="com.distrimind.ood.database.exceptions.DatabaseException" message="Unexpected exception">
      <![CDATA[com.distrimind.ood.database.exceptions.DatabaseException: Unexpected exception
	at com.distrimind.ood.database.exceptions.DatabaseException.getDatabaseException(DatabaseException.java:85)
	at com.distrimind.ood.database.fieldaccessors.SerializableFieldAccessor.getValue(SerializableFieldAccessor.java:270)
	at com.distrimind.ood.database.fieldaccessors.CalendarFieldAccessor.serializeObject(CalendarFieldAccessor.java:74)
	at com.distrimind.ood.database.fieldaccessors.SerializableFieldAccessor.getValue(SerializableFieldAccessor.java:297)
	at com.distrimind.ood.database.fieldaccessors.SerializableFieldAccessor.getValue(SerializableFieldAccessor.java:279)
	at com.distrimind.ood.database.Table$35$1TransactionTmp.run(Table.java:6420)
	at com.distrimind.ood.database.DatabaseWrapper.runTransaction(DatabaseWrapper.java:1601)
	at com.distrimind.ood.database.Table$35.run(Table.java:6473)
	at com.distrimind.ood.database.DatabaseWrapper.runTransaction(DatabaseWrapper.java:1520)
	at com.distrimind.ood.database.Table.addRecord(Table.java:6172)
	at com.distrimind.ood.database.Table.addRecord(Table.java:6166)
	at com.distrimind.ood.database.Table.addRecord(Table.java:6083)
	at com.distrimind.ood.tests.TestDatabase.firstAdd(TestDatabase.java:403)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
Caused by: java.lang.IllegalArgumentException: Can not set java.util.Calendar field com.distrimind.ood.tests.database.Table1$Record.CalendarValue to java.util.GregorianCalendar
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:164)
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:168)
	at sun.reflect.UnsafeFieldAccessorImpl.ensureObj(UnsafeFieldAccessorImpl.java:55)
	at sun.reflect.UnsafeObjectFieldAccessorImpl.get(UnsafeObjectFieldAccessorImpl.java:36)
	at java.lang.reflect.Field.get(Field.java:379)
	at com.distrimind.ood.database.fieldaccessors.SerializableFieldAccessor.getValue(SerializableFieldAccessor.java:265)
	... 36 more
]]>
    </error>
  </testcase> <!-- firstAdd -->
  <testcase name="checkUnloadedDatabase" time="1.028" classname="com.distrimind.ood.tests.HSQLDBTestDatabase"/>
  <testcase name="multipleTests" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- multipleTests -->
  <testcase name="testRemoveFilters" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testRemoveFilters -->
  <testcase name="alterRecord" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- alterRecord -->
  <testcase name="addSecondRecord" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- addSecondRecord -->
  <testcase name="removeRecord" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- removeRecord -->
  <testcase name="secondTestSize" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- secondTestSize -->
  <testcase name="testBackup" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testBackup -->
  <testcase name="firstLoad" time="0.638" classname="com.distrimind.ood.tests.HSQLDBTestDatabase"/>
  <testcase name="firstTestSize" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- firstTestSize -->
  <testcase name="testThreadSafe" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testThreadSafe -->
  <testcase name="removeForeignKeyRecords" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- removeForeignKeyRecords -->
  <testcase name="testCommandTranslatorInterpreter" time="0.094" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <error type="com.distrimind.ood.database.exceptions.QueryInterpretationImpossible" message="The next querry can interpreted with several rules : FloatNumber_value&lt;&gt;%FloatNumber_value OR double_value&lt;&gt;%double_value OR DoubleNumber_value&lt;&gt;%DoubleNumber_value OR short_value&lt;&gt;%short_value OR boolean_value&lt;&gt;%boolean_value OR ByteNumber_value&lt;&gt;%ByteNumber_value OR LongNumber_value&lt;&gt;%LongNumber_value OR IntegerNumber_value&lt;&gt;%IntegerNumber_value OR int_value&lt;&gt;%int_value OR byte_array_value&lt;&gt;%byte_array_value OR DateValue&lt;&gt;%DateValue OR byte_value&lt;&gt;%byte_value OR long_value&lt;&gt;%long_value OR BigInteger_value&lt;&gt;%BigInteger_value OR float_value&lt;&gt;%float_value OR BigDecimal_value&lt;&gt;%BigDecimal_value OR ShortNumber_value&lt;&gt;%ShortNumber_value OR char_value&lt;&gt;%char_value OR CharacterNumber_value&lt;&gt;%CharacterNumber_value OR BooleanNumber_value&lt;&gt;%BooleanNumber_value OR CalendarValue&lt;&gt;%CalendarValue OR pk5&lt;&gt;%pk5 OR pk6&lt;&gt;%pk6 OR string_value&lt;&gt;%string_value OR pk7&lt;&gt;%pk7">
      <![CDATA[com.distrimind.ood.database.exceptions.QueryInterpretationImpossible: The next querry can interpreted with several rules : FloatNumber_value<>%FloatNumber_value OR double_value<>%double_value OR DoubleNumber_value<>%DoubleNumber_value OR short_value<>%short_value OR boolean_value<>%boolean_value OR ByteNumber_value<>%ByteNumber_value OR LongNumber_value<>%LongNumber_value OR IntegerNumber_value<>%IntegerNumber_value OR int_value<>%int_value OR byte_array_value<>%byte_array_value OR DateValue<>%DateValue OR byte_value<>%byte_value OR long_value<>%long_value OR BigInteger_value<>%BigInteger_value OR float_value<>%float_value OR BigDecimal_value<>%BigDecimal_value OR ShortNumber_value<>%ShortNumber_value OR char_value<>%char_value OR CharacterNumber_value<>%CharacterNumber_value OR BooleanNumber_value<>%BooleanNumber_value OR CalendarValue<>%CalendarValue OR pk5<>%pk5 OR pk6<>%pk6 OR string_value<>%string_value OR pk7<>%pk7
	at com.distrimind.ood.interpreter.Interpreter.getNewQueryParts(Interpreter.java:174)
	at com.distrimind.ood.interpreter.Interpreter.getQuery(Interpreter.java:130)
	at com.distrimind.ood.interpreter.Interpreter.getRuleInstance(Interpreter.java:69)
	at com.distrimind.ood.tests.TestDatabase.testCommandTranslatorInterpreter(TestDatabase.java:3288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </error>
  </testcase> <!-- testCommandTranslatorInterpreter -->
  <testcase name="removeRecords" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- removeRecords -->
  <testcase name="testIsPointed" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testIsPointed -->
  <testcase name="alterRecordWithCascade" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- alterRecordWithCascade -->
  <testcase name="testCommandTranslatorInterpreter" time="0.312" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <error type="com.distrimind.ood.database.exceptions.QueryInterpretationImpossible" message="The next querry can interpreted with several rules : FloatNumber_value&lt;&gt;%FloatNumber_value AND double_value&lt;&gt;%double_value AND DoubleNumber_value&lt;&gt;%DoubleNumber_value AND short_value&lt;&gt;%short_value AND boolean_value&lt;&gt;%boolean_value AND ByteNumber_value&lt;&gt;%ByteNumber_value AND LongNumber_value&lt;&gt;%LongNumber_value AND IntegerNumber_value&lt;&gt;%IntegerNumber_value AND int_value&lt;&gt;%int_value AND byte_array_value&lt;&gt;%byte_array_value AND DateValue&lt;&gt;%DateValue AND byte_value&lt;&gt;%byte_value AND long_value&lt;&gt;%long_value AND BigInteger_value&lt;&gt;%BigInteger_value AND float_value&lt;&gt;%float_value AND BigDecimal_value&lt;&gt;%BigDecimal_value AND ShortNumber_value&lt;&gt;%ShortNumber_value AND char_value&lt;&gt;%char_value AND CharacterNumber_value&lt;&gt;%CharacterNumber_value AND BooleanNumber_value&lt;&gt;%BooleanNumber_value AND CalendarValue&lt;&gt;%CalendarValue AND pk5&lt;&gt;%pk5 AND pk6&lt;&gt;%pk6 AND string_value&lt;&gt;%string_value AND pk7&lt;&gt;%pk7">
      <![CDATA[com.distrimind.ood.database.exceptions.QueryInterpretationImpossible: The next querry can interpreted with several rules : FloatNumber_value<>%FloatNumber_value AND double_value<>%double_value AND DoubleNumber_value<>%DoubleNumber_value AND short_value<>%short_value AND boolean_value<>%boolean_value AND ByteNumber_value<>%ByteNumber_value AND LongNumber_value<>%LongNumber_value AND IntegerNumber_value<>%IntegerNumber_value AND int_value<>%int_value AND byte_array_value<>%byte_array_value AND DateValue<>%DateValue AND byte_value<>%byte_value AND long_value<>%long_value AND BigInteger_value<>%BigInteger_value AND float_value<>%float_value AND BigDecimal_value<>%BigDecimal_value AND ShortNumber_value<>%ShortNumber_value AND char_value<>%char_value AND CharacterNumber_value<>%CharacterNumber_value AND BooleanNumber_value<>%BooleanNumber_value AND CalendarValue<>%CalendarValue AND pk5<>%pk5 AND pk6<>%pk6 AND string_value<>%string_value AND pk7<>%pk7
	at com.distrimind.ood.interpreter.Interpreter.getNewQueryParts(Interpreter.java:174)
	at com.distrimind.ood.interpreter.Interpreter.getQuery(Interpreter.java:130)
	at com.distrimind.ood.interpreter.Interpreter.getRuleInstance(Interpreter.java:69)
	at com.distrimind.ood.tests.TestDatabase.testCommandTranslatorInterpreter(TestDatabase.java:3288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </error>
  </testcase> <!-- testCommandTranslatorInterpreter -->
  <testcase name="isLoadedIntoMemory" time="0.005" classname="com.distrimind.ood.tests.HSQLDBTestDatabase"/>
  <testcase name="firstReload" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- firstReload -->
  <testcase name="testCheckPoint" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testCheckPoint -->
  <testcase name="testDatabaseRemove" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testDatabaseRemove -->
  <testcase name="testArrayRecordParameters" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testArrayRecordParameters -->
  <testcase name="addForeignKeyAndTestUniqueKeys" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- addForeignKeyAndTestUniqueKeys -->
  <testcase name="testFilters" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testFilters -->
  <testcase name="removePointedRecords" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- removePointedRecords -->
  <testcase name="testFirstAdd" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- testFirstAdd -->
  <testcase name="prepareMultipleTest" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- prepareMultipleTest -->
  <testcase name="setAutoRandomFields" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- setAutoRandomFields -->
  <testcase name="getRecordFilter" time="0.000" classname="com.distrimind.ood.tests.HSQLDBTestDatabase">
    <skipped/>
  </testcase> <!-- getRecordFilter -->
</testsuite> <!-- com.distrimind.ood.tests.HSQLDBTestDatabase -->
